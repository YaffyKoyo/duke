#BlueJ class context
comment0.params=parser
comment0.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment1.params=currentRow\ coldestSoFar
comment1.target=org.apache.commons.csv.CSVRecord\ getColdestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment10.params=
comment10.target=void\ testHumfile()
comment11.params=
comment11.target=void\ testLowestHumidityInFile()
comment12.params=
comment12.target=void\ testColdestHourInFile()
comment2.params=currentRow\ lowestSoFar
comment2.target=org.apache.commons.csv.CSVRecord\ getLowestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment3.params=parser
comment3.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment4.params=
comment4.target=java.lang.String\ fileWithColdestTemperature()
comment5.params=
comment5.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment6.params=parser
comment6.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment7.params=parser
comment7.target=double\ averageTemperatureWithHumidityInFile(org.apache.commons.csv.CSVParser)
comment8.params=
comment8.target=void\ testAverageTemperatureInFile()
comment9.params=
comment9.target=void\ testTempfile()
numComments=13
